/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Data.LinkedList;

import java.util.ArrayList;
import java.util.List;

public class LinkedList {

    Node head; //this is the head of the list


    public void insert(Object newData) {
        Node newNode = new Node(newData, this.head); //creating the new Node
        newNode.next = head; //assigning the current head to the next node
        head = newNode; //change head to be the newNode added
    }

    public boolean includes(Object data){

        Node current = head;
        while(current != null){
            if(current.data == data){
                return true;
            }
            current = current.next;
        }

    return false;
    }

    public String toString(){

        List<Object> nodeList = new ArrayList<>();
        Node current = head;
        while(current != null){
            nodeList.add(current.data);
            current = current.next;
            System.out.println("this");
        }
        return String.valueOf(nodeList);

    }

    public void append(Object newData){
        Node newNode = new Node(newData, this.head);

        if(this.head == null){
            this.head = new Node(newData, null);
            return;
        }
        Node last = head;
        while(last.next != null){
            last = last.next;
            last.next = newNode;
        }
    }

    public void insertBefore(Object newData, Object value){
        if(this.head == null){
            this.head = new Node(newData, null);
        }
        Node current = head;
        while(current != null){
            if(current.next.newData == value){
                current.next = new Node(value, current.next);
                return;
            }
            current = current.next;
        }

    throw new IllegalArgumentException("Element does not exist");
    }

    public void insertAfter(Object newData, Object value){
        if(this.head == null){
            throw new IllegalArgumentException("Element does not exist");

        }
        Node newNode = new Node(newData, null);
        Node current = head;
        while(current != null){
            if(current.newData == value){
                current.next = new Node(value, current.next);
                return;
            }
            current = current.next;
        }
        throw new IllegalArgumentException("Element does not exist");

    }

    public Object kthFromEnd(int k){
        if(this.head == null){
            throw new NullPointerException("Linked list is empty");
        }
        Node current = head;
        int len = 0;
        while(current != null){
            current = current.next;
            len++;
        }
        if(len < k || k < 0){
            throw new IllegalArgumentException("The kth value does not exist");
        }
        current = head;
        for(int i = 1; i < len - k; i++){
            current = current.next;
        }
        return current.next.data;
    }


}
